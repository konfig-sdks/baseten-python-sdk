# coding: utf-8

"""
    Baseten management API

    REST API for management of Baseten resources

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from baseten_python_sdk import schemas  # noqa: F401


class AutoscalingSettingsV1(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Autoscaling settings for a deployment.
    """


    class MetaOapg:
        required = {
            "scale_down_delay",
            "min_replica",
            "max_replica",
            "concurrency_target",
            "autoscaling_window",
        }
        
        class properties:
            min_replica = schemas.IntSchema
            max_replica = schemas.IntSchema
            autoscaling_window = schemas.IntSchema
            scale_down_delay = schemas.IntSchema
            concurrency_target = schemas.IntSchema
            __annotations__ = {
                "min_replica": min_replica,
                "max_replica": max_replica,
                "autoscaling_window": autoscaling_window,
                "scale_down_delay": scale_down_delay,
                "concurrency_target": concurrency_target,
            }
    
    scale_down_delay: MetaOapg.properties.scale_down_delay
    min_replica: MetaOapg.properties.min_replica
    max_replica: MetaOapg.properties.max_replica
    concurrency_target: MetaOapg.properties.concurrency_target
    autoscaling_window: MetaOapg.properties.autoscaling_window
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["min_replica"]) -> MetaOapg.properties.min_replica: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["max_replica"]) -> MetaOapg.properties.max_replica: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["autoscaling_window"]) -> MetaOapg.properties.autoscaling_window: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scale_down_delay"]) -> MetaOapg.properties.scale_down_delay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["concurrency_target"]) -> MetaOapg.properties.concurrency_target: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["min_replica", "max_replica", "autoscaling_window", "scale_down_delay", "concurrency_target", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["min_replica"]) -> MetaOapg.properties.min_replica: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["max_replica"]) -> MetaOapg.properties.max_replica: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["autoscaling_window"]) -> MetaOapg.properties.autoscaling_window: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scale_down_delay"]) -> MetaOapg.properties.scale_down_delay: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["concurrency_target"]) -> MetaOapg.properties.concurrency_target: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["min_replica", "max_replica", "autoscaling_window", "scale_down_delay", "concurrency_target", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        scale_down_delay: typing.Union[MetaOapg.properties.scale_down_delay, decimal.Decimal, int, ],
        min_replica: typing.Union[MetaOapg.properties.min_replica, decimal.Decimal, int, ],
        max_replica: typing.Union[MetaOapg.properties.max_replica, decimal.Decimal, int, ],
        concurrency_target: typing.Union[MetaOapg.properties.concurrency_target, decimal.Decimal, int, ],
        autoscaling_window: typing.Union[MetaOapg.properties.autoscaling_window, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AutoscalingSettingsV1':
        return super().__new__(
            cls,
            *args,
            scale_down_delay=scale_down_delay,
            min_replica=min_replica,
            max_replica=max_replica,
            concurrency_target=concurrency_target,
            autoscaling_window=autoscaling_window,
            _configuration=_configuration,
            **kwargs,
        )
